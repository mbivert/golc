// Code generated by "stringer -type tokenKind -linecomment tokenkind.go"; DO NOT EDIT.

package main

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[tokenEOF-0]
	_ = x[tokenError-1]
	_ = x[tokenName-2]
	_ = x[tokenLambda-3]
	_ = x[tokenLParen-4]
	_ = x[tokenRParen-5]
	_ = x[tokenDot-6]
	_ = x[tokenFloat-7]
	_ = x[tokenInt-8]
	_ = x[tokenBool-9]
	_ = x[tokenExcl-10]
	_ = x[tokenPlus-11]
	_ = x[tokenMinus-12]
	_ = x[tokenStar-13]
	_ = x[tokenSlash-14]
	_ = x[tokenLess-15]
	_ = x[tokenMore-16]
	_ = x[tokenOr-17]
	_ = x[tokenAnd-18]
	_ = x[tokenMoreEq-19]
	_ = x[tokenLessEq-20]
	_ = x[tokenFPlus-21]
	_ = x[tokenFMinus-22]
	_ = x[tokenFStar-23]
	_ = x[tokenFSlash-24]
	_ = x[tokenFLess-25]
	_ = x[tokenFMore-26]
	_ = x[tokenAndAnd-27]
	_ = x[tokenOrOr-28]
	_ = x[tokenFMoreEq-29]
	_ = x[tokenFLessEq-30]
	_ = x[tokenColon-31]
	_ = x[tokenPi-32]
	_ = x[tokenArrow-33]
	_ = x[tokenProduct-34]
	_ = x[tokenLet-35]
	_ = x[tokenIn-36]
	_ = x[tokenRec-37]
	_ = x[tokenMatch-38]
	_ = x[tokenWith-39]
	_ = x[tokenIf-40]
	_ = x[tokenThen-41]
	_ = x[tokenElse-42]
	_ = x[tokenNew-43]
	_ = x[tokenMeas-44]
}

const _tokenKind_name = "EOFerrornameλ().float64int64bool!+-*/<>|&≥≤+.-.*./.<.>.&&||≥.≤.:π→×letinrecmatchwithifthenelsenewmeas"

var _tokenKind_index = [...]uint8{0, 3, 8, 12, 14, 15, 16, 17, 24, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 48, 50, 52, 54, 56, 58, 60, 62, 64, 68, 72, 73, 75, 78, 80, 83, 85, 88, 93, 97, 99, 103, 107, 110, 114}

func (i tokenKind) String() string {
	if i >= tokenKind(len(_tokenKind_index)-1) {
		return "tokenKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _tokenKind_name[_tokenKind_index[i]:_tokenKind_index[i+1]]
}

// Code generated by "stringer -type tokenKind -linecomment tokenkind.go"; DO NOT EDIT.

package main

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[tokenEOF-0]
	_ = x[tokenError-1]
	_ = x[tokenName-2]
	_ = x[tokenLambda-3]
	_ = x[tokenLParen-4]
	_ = x[tokenRParen-5]
	_ = x[tokenDot-6]
	_ = x[tokenFloat-7]
	_ = x[tokenInt-8]
	_ = x[tokenBool-9]
	_ = x[tokenTBool-10]
	_ = x[tokenTInt-11]
	_ = x[tokenTFloat-12]
	_ = x[tokenTUnit-13]
	_ = x[tokenExcl-14]
	_ = x[tokenPlus-15]
	_ = x[tokenMinus-16]
	_ = x[tokenStar-17]
	_ = x[tokenSlash-18]
	_ = x[tokenLess-19]
	_ = x[tokenMore-20]
	_ = x[tokenOr-21]
	_ = x[tokenAnd-22]
	_ = x[tokenMoreEq-23]
	_ = x[tokenLessEq-24]
	_ = x[tokenFPlus-25]
	_ = x[tokenFMinus-26]
	_ = x[tokenFStar-27]
	_ = x[tokenFSlash-28]
	_ = x[tokenFLess-29]
	_ = x[tokenFMore-30]
	_ = x[tokenAndAnd-31]
	_ = x[tokenOrOr-32]
	_ = x[tokenFMoreEq-33]
	_ = x[tokenFLessEq-34]
	_ = x[tokenColon-35]
	_ = x[tokenPi-36]
	_ = x[tokenArrow-37]
	_ = x[tokenProduct-38]
	_ = x[tokenLet-39]
	_ = x[tokenIn-40]
	_ = x[tokenRec-41]
	_ = x[tokenMatch-42]
	_ = x[tokenWith-43]
	_ = x[tokenIf-44]
	_ = x[tokenThen-45]
	_ = x[tokenElse-46]
	_ = x[tokenNew-47]
	_ = x[tokenMeas-48]
}

const _tokenKind_name = "EOFerrornameλ().float64int64boolboolintfloatunit!+-*/<>|&≥≤+.-.*./.<.>.&&||≥.≤.:π→×letinrecmatchwithifthenelsenewmeas"

var _tokenKind_index = [...]uint8{0, 3, 8, 12, 14, 15, 16, 17, 24, 29, 33, 37, 40, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 64, 66, 68, 70, 72, 74, 76, 78, 80, 84, 88, 89, 91, 94, 96, 99, 101, 104, 109, 113, 115, 119, 123, 126, 130}

func (i tokenKind) String() string {
	if i >= tokenKind(len(_tokenKind_index)-1) {
		return "tokenKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _tokenKind_name[_tokenKind_index[i]:_tokenKind_index[i+1]]
}
